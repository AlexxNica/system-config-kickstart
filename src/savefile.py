#!/usr/bin/env python

## Kickstart Configurator - A graphical kickstart file generator
## Copyright (C) 2000, 2001 Red Hat, Inc.
## Copyright (C) 2000, 2001 Brent Fox <bfox@redhat.com>
##                          Tammy Fox <tfox@redhat.com>

## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.

## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.

## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

## Authors: Brent Fox <bfox@redhat.com>
##          Tammy Fox <tfox@redhat.com>

from gtk import *
from gnome.ui import *
import GtkExtra
import auth
#import network
import firewall
import string
import savedialog

import gtk
import signal
import libglade
import gnome.ui

xml = libglade.GladeXML ("./ksconfig.glade", "confirm_options_dialog", domain="ksconfig")

class saveFile:
	
	def destroy(self, args):
            self.dialog.destroy()

        def __init__ (self):
            self.dialog = xml.get_widget("confirm_options_dialog")
            self.dialog.connect ("destroy", self.destroy)

            #extract widgets, autoconnects
            xml.signal_autoconnect (
                { "on_confirm_options_cancel_button" : self.on_confirm_options_cancel_button,
                  "saveFile_cb" : self.saveFile_cb,
                  } )

            self.dialog.show_all()

        def on_confirm_options_cancel_button(self, *args):
            #using hide because destroy crashes application after second instance
            self.dialog.hide()

	def saveFile_cb(self, *args):

 		buf = "#Generated by Kickstart Configurator"

## 		buf = buf + "\n" + languageLookup(languageCombo.entry.get_text())
## 		buf = buf + "\n" + languagesupportLookup(languagesupportCombo.entry.get_text())
## 		buf = buf + "\n" + "keyboard " + keyboardCombo.entry.get_text()
## 		buf = buf + "\n" + mouseLookup(mouseCombo.entry.get_text())
## 		buf = buf + "\n" + "timezone --utc " + timeCombo.entry.get_text()
## 		buf = buf + "\n" + "rootpw " + rootEntry.get_text()

## 		if sourceRadio1.get_active():
## 			buf = buf + "\n" + "cdrom"
## 		elif sourceRadio2.get_active():
## 			buf = buf + "\n" + "nfs"
## 			buf = buf + " --server " + serverEntry.get_text()
## 			buf = buf + " --dir " + dirEntry.get_text()
## 		elif sourceRadio3.get_active():
## 			buf = buf + "\n" + "url"
## 			buf = buf + " --url ftp://" + ftpEntry.get_text()
## 			buf = buf + ftpDirEntry.get_text()		
## 		elif sourceRadio4.get_active():
## 			buf = buf + "\n" + "harddrive"
## 			buf = buf + " --dir " + hdDirEntry.get_text()
## 			buf = buf + " --partition " + hdDevEntry.get_text()

## 		try:
## 			buf = buf + networkWin.getData()
## 		except:
## 			pass

## 		buf = buf + "\n" + "install"

## 		buf = buf + "\n" + "auth"

## 		if authCheck1.get_active():
## 			buf = buf + " --useshadow"

## 			if authCheck2.get_active():
## 				buf = buf + " --enablemd5"

## 		try:
## 			buf = buf + authWin.getData() + "\n"
## 			print buf
## 		except:
## 			pass

## 		try:
## 			buf = buf + "\n" + firewallWin.getData()
## 		except:
## 			pass

## 		if mbrRadio1.get_active():
## 			buf = buf + "\n" + "zerombr yes"
## 		elif mbrRadio2.get_active():
## 			buf = buf + "\n" + "zerombr no"			

## 		if clearRadio1.get_active():
## 			buf = buf
## 		elif clearRadio2.get_active():
## 			buf = buf + "\n" + "clearpart --all"
## 		elif clearRadio3.get_active():
## 			buf = buf + "\n" + "clearpart --linux"

## 		rows = myCount.currentVal()

## 		for n in range(rows):
## 			line = "part"
## 			for i in range(4):

## 				if i == 0:
## 					mount = self.partClist.get_text(n, i)
## 					if mount == '':
## 						line = line
## 					else:
## 						line = line + " " + mount
## 				elif i == 1:
## 					fsType = self.partClist.get_text(n, i)
## 					if fsType == 'Linux Swap':
## 						line = line + " swap"
## 					elif fsType == 'ext2':
## 						line = line + " "
## 					else:
## 						line = line + " " + fsType
## 				elif i == 2:
## 					size = self.partClist.get_text(n, i)
## 					line = line + " --size " + size
## 				elif i == 3:
## 					grow = self.partClist.get_text(n, i)
## 					if grow == 'Yes':
## 						line = line + " --grow"
## 					else:
## 						line = line

## 			buf = buf + "\n" + line

## 		if liloRadio1.get_active():
## 			buf = buf + "\n" + "lilo --location mbr"
## 		elif liloRadio2.get_active():
## 			buf = buf + "\n" + "lilo --location none"

## 		try:
## 			buf = buf + "\n" + packageWin.getData()
## 		except:
## 			pass

## 		fileDialog = savedialog.saveDialog(buf)
		self.dialog.hide()
 		fileDialog = savedialog.saveDialog(buf)		


